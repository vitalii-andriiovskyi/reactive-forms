// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@import '~@angular/material/theming';
@import 'variables';
// Plus imports for other components in your app.

:root {
  --headline-fz: 2rem; 
  --title-fz: 1.6rem; 
}

@media screen and (min-width: 992px) {
  :root {
    --headline-fz: 2.2rem; 
    --title-fz: 1.8rem; 
  }
}

$sg-typography: mat-typography-config(
  $headline: mat-typography-level(var(--headline-fz), 1.125, 700),
  $title: mat-typography-level(var(--title-fz), 1.25, 700),
  $subheading-2: mat-typography-level(1.3rem, 1.3, 700),
  $subheading-1: mat-typography-level(1em, 1.5, 700),
  $body-1: mat-typography-level(var(--fontsize), var(--lineheight), 400),
  $body-2: mat-typography-level(var(--fontsize), var(--lineheight), 400),
  $button: mat-typography-level(var(--fontsize), var(--lineheight), 400),
  $input: mat-typography-level(16px, 1.125, 400)
);

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat-core($sg-typography);

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$sg-blog-primary: mat-palette($mat-teal);
$sg-blog-accent: mat-palette($mat-lime, A200, A100, A400);

// The warn palette is optional (defaults to red).
$sg-blog-warn: mat-palette($mat-red);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$sg-blog-theme: mat-light-theme((
  color: (
    primary: $sg-blog-primary,
    accent: $sg-blog-accent,
    warn: $sg-blog-warn,
  )
));

// $accent: map-get($sg-blog-theme, accent);
// $primary: map-get($sg-blog-theme, primary);
// $warn: map-get($sg-blog-theme, warn);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat-core-theme($sg-blog-theme);
@include mat-card-theme($sg-blog-theme);
@include mat-progress-spinner-theme($sg-blog-theme);
@include mat-icon-theme($sg-blog-theme);
@include mat-button-theme($sg-blog-theme);
// @include angular-material-theme($sg-blog-theme);


